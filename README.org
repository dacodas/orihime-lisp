* TODO Create stack based approach to looking up words
* TODO Create network of words after stack based session
* TODO Use scribble (or something similar) for documentation
* TODO Make a mode for looking at \*goo-word-\* buffers
** TODO Handle cases with ㋐㋑㋒㋓㋔ in the definitions
There are two ways of solving this, I think:

1. Parse the dictionary entries into Lispy data structures
2. Allow the \*goo-word-\* mode to treat lines starting with ㋐㋑
   etc. in the same way org-mode treats lines starting with hyphens
   and numbers
* TODO Get linedit working
What was this for again, now?
* TODO I'm mixing up the WORD key and it's representation in memory
* TODO Ignore the /l-ol comments in definitions
An example of these is the definition for 長い
* TODO Are parent and child words working right now?
* TODO How to relate sentence with words? 
Should I implement this in both elisp and common lisp? 
* TODO Adding sentence and then changing it later
Should a change to the buffer just go through the whole structure of
words and update them? I guess since there is only a sentence->word
connection, that might suffice, eh?
* TODO Sentence->word relationship isn't working
I think this is the same issue as before with the friggin shizz
